@startuml Context
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master

!include osaPuml/Common.puml
!include osaPuml/User/all.puml

!include <office/Servers/application_server>
!include <office/Services/web_services>
!include <office/Concepts/application_generic>
!include <office/Concepts/service_application>
!include <office/Servers/web_server>
!include <office/Communications/queue_viewer>
!include <office/Concepts/clock>
!include <office/Concepts/tasks>
!include <tupadr3/dev2/python>
!include <tupadr3/material/local_library>


AddContainerTag("rest_api", $sprite="web_server", $legendText="Repository REST API")
AddContainerTag("queue", $sprite="queue_viewer", $legendText="Message Queue")
AddContainerTag("scheduler", $sprite="clock", $legendText="Scheduler for tasks")
AddContainerTag("tasks", $sprite="tasks", $legendText="Celery Tasks Publisher")
AddComponentTag("python", $sprite="python", $legendText="Python Application")
AddComponentTag("service", $sprite="python", $legendText="Python Application")
AddContainerTag("storage_service", $sprite="file_server", $legendText="Storage Service", $bgColor=Gray)
AddContainerTag("key_service", $sprite="lock_with_key_security", $legendText="Key Service", $bgColor=Gray)

Boundary(kaprien_rest_api, "KAPRIEN-REST-API"){

    Component(api, "FastAPI", "Python"){
    }

    Component(implementation, "Implementation", "Python"){
        Container(bootstrap, "bootstrap", $tags="service")
        Container(targets, "targets", $tags="service")
        Container(repo_settings, "repository_settings", $tags="service")
        Container(token, "token", $tags="service")
        Container(users, "users", $tags="service")
    }

    Rel(api_bootstrap, bootstrap, " ")
    Rel(api_targets, targets, " ")
    Rel(api_repo_settings, repo_settings, " ")
    Rel(api_token, token, " ")
    Rel_R(token, users, " ")

    Component(celery_tasks, "Task Manager", "Python", $tags=celery){
        Container(repository_metadata_tasks, "repository_metadata", $tags="tasks")
    }

    Rel(bootstrap, repository_metadata_tasks, " ")
    Rel(targets, repository_metadata_tasks, " ")
    Component(settings, "settings", "Service/Repository Settings", $tags="python")
}

Container(broker, "Broker", "Message Queue", $tags="queue") #Grey

Rel_D(repository_metadata_tasks, broker, " ")
Rel(kaprien_rest_api, settings, " ")
Rel_D(bootstrap, settings, " ")
Rel_L(settings, repository_metadata_tasks, " ")
Rel_L(settings, repository_metadata_tasks, " ")


HIDE_STEREOTYPE()

@enduml